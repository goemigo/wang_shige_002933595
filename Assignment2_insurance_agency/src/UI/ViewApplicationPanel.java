/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package UI;

import Model.Applicant;
import Model.ApplicantDirectory;
import Model.Business;
import Model.InsurancePlan;
import Model.Vaccination;
import Model.VaccinationHistory;
import Model.VerifyNull;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.JTextField;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author emi
 */
public class ViewApplicationPanel extends javax.swing.JPanel {

    /**
     * Creates new form ViewApplicationPanel
     */
    private Business business;
    private ArrayList<Applicant> searchResults;
    DefaultTableModel applicantTableModel;
    DefaultTableModel vacTableModel;
    
    public ViewApplicationPanel() {
        initComponents();
    }
    
    public ViewApplicationPanel(Business business){
        initComponents();
        
        this.business = business;
        this.applicantTableModel = (DefaultTableModel) applicantTable.getModel();
        this.vacTableModel = (DefaultTableModel) vacHistoryTable.getModel();
        
        //show all applicants before search
        populateAllApps();
        
        //populate the insurance plan dropdown and set default selected to none
        populateInsuranceComboBox();
        planOpted.setSelectedItem(null);
        
        //populate the vaccine completed dropdown and set defalt selected to none
        populateVacCompletedComboBox();
        vacCompletedComboBox.setSelectedItem(null);

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    
    public void populateAllApps(){
        applicantTableModel.setRowCount(0);
        for(Applicant a: this.business.getApplicantDirectory().getApplicants()){
            Object row[] = new Object[3];
            row[0] = a;
            row[1] = a.getFirstName();
            row[2] = a.getLastName();
                
            this.applicantTableModel.addRow(row);
        }
    }
    
    public void populateApplicantTable(ArrayList<Applicant> populateList){
        
        applicantTableModel.setRowCount(0);
        
        for (Applicant a: populateList){
            Object row[] = new Object[3];
            row[0] = a;//must have an Override toString to avoid showing an object in the table
            row[1] = a.getFirstName();
            row[2] = a.getLastName();
                
            this.applicantTableModel.addRow(row);
        }
    }
    
    public void populateVacTable(Applicant app){
        vacTableModel.setRowCount(0);
        
        for (Vaccination v: app.getPet().getVaccines().getVaccinationhistory()){
            Object row[] = new Object[2];
            row[0] = v.getVaccineName();
            row[1] = v.getCourseCompletedString();

                
            this.vacTableModel.addRow(row);
        }
    }
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        fieldSearchName = new javax.swing.JTextField();
        fieldSearchId = new javax.swing.JTextField();
        btnSrchApp = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        applicantTable = new javax.swing.JTable();
        btnDelApp = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        vacHistoryTable = new javax.swing.JTable();
        viewType = new javax.swing.JTextField();
        viewGender = new javax.swing.JTextField();
        viewAge = new javax.swing.JTextField();
        viewPetName = new javax.swing.JTextField();
        viewAppDate = new javax.swing.JTextField();
        viewOwnerFirstName = new javax.swing.JTextField();
        viewAppId = new javax.swing.JTextField();
        btnUpdatePet = new javax.swing.JButton();
        viewOwnerLastName = new javax.swing.JTextField();
        jLabel15 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        viewBreed = new javax.swing.JTextField();
        planOpted = new javax.swing.JComboBox();
        fieldVacName = new javax.swing.JTextField();
        jLabel18 = new javax.swing.JLabel();
        vacCompletedComboBox = new javax.swing.JComboBox<>();
        jLabel19 = new javax.swing.JLabel();

        setBackground(new java.awt.Color(255, 204, 204));
        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setText("Input applicant id OR name to search applicant:");
        add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 30, -1, -1));

        jLabel2.setText("Applicant ID");
        add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 67, -1, 30));

        jLabel3.setText("First Name");
        add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 110, -1, 30));
        add(fieldSearchName, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 110, 110, 30));
        add(fieldSearchId, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 70, 110, 30));

        btnSrchApp.setText("Search Applicant");
        btnSrchApp.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSrchAppActionPerformed(evt);
            }
        });
        add(btnSrchApp, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 180, -1, -1));

        applicantTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Applicant ID", "First Name", "Last Name"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.String.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        applicantTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                applicantTableMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(applicantTable);

        add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 310, 240, 330));

        btnDelApp.setText("Delete Applicant");
        btnDelApp.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDelAppActionPerformed(evt);
            }
        });
        add(btnDelApp, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 660, 130, -1));

        jLabel4.setText("Application ID");
        add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(360, 70, -1, -1));

        jLabel5.setText("Insurance plan opted");
        add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(360, 380, -1, -1));

        jLabel6.setText("First Name");
        add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(360, 100, -1, -1));

        jLabel7.setText("Last Name");
        add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(360, 130, -1, -1));

        jLabel8.setText("Application Date");
        add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(360, 160, -1, -1));

        jLabel9.setText("Pet Name");
        add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(360, 230, -1, -1));

        jLabel10.setText("Age");
        add(jLabel10, new org.netbeans.lib.awtextra.AbsoluteConstraints(360, 260, -1, -1));

        jLabel11.setText("Gender");
        add(jLabel11, new org.netbeans.lib.awtextra.AbsoluteConstraints(360, 290, -1, -1));

        jLabel12.setText("Type");
        add(jLabel12, new org.netbeans.lib.awtextra.AbsoluteConstraints(360, 320, -1, -1));

        jLabel13.setText("Breed");
        add(jLabel13, new org.netbeans.lib.awtextra.AbsoluteConstraints(360, 350, -1, -1));

        jLabel14.setText("Search results:");
        add(jLabel14, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 270, -1, -1));

        jLabel17.setText("Vaccination history:");
        add(jLabel17, new org.netbeans.lib.awtextra.AbsoluteConstraints(360, 440, -1, -1));

        vacHistoryTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null},
                {null, null},
                {null, null},
                {null, null}
            },
            new String [] {
                "Vaccine Name", "Completed"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        vacHistoryTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                vacHistoryTableMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(vacHistoryTable);

        add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(360, 470, 280, 170));
        add(viewType, new org.netbeans.lib.awtextra.AbsoluteConstraints(490, 320, 150, -1));
        add(viewGender, new org.netbeans.lib.awtextra.AbsoluteConstraints(490, 290, 150, -1));
        add(viewAge, new org.netbeans.lib.awtextra.AbsoluteConstraints(490, 260, 150, -1));
        add(viewPetName, new org.netbeans.lib.awtextra.AbsoluteConstraints(490, 230, 150, -1));

        viewAppDate.setEditable(false);
        add(viewAppDate, new org.netbeans.lib.awtextra.AbsoluteConstraints(490, 160, 150, -1));

        viewOwnerFirstName.setEditable(false);
        add(viewOwnerFirstName, new org.netbeans.lib.awtextra.AbsoluteConstraints(490, 100, 150, -1));

        viewAppId.setEditable(false);
        viewAppId.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                viewAppIdFocusLost(evt);
            }
        });
        add(viewAppId, new org.netbeans.lib.awtextra.AbsoluteConstraints(490, 70, 150, -1));

        btnUpdatePet.setText("Update Pet");
        btnUpdatePet.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdatePetActionPerformed(evt);
            }
        });
        add(btnUpdatePet, new org.netbeans.lib.awtextra.AbsoluteConstraints(440, 660, 130, -1));

        viewOwnerLastName.setEditable(false);
        add(viewOwnerLastName, new org.netbeans.lib.awtextra.AbsoluteConstraints(490, 130, 150, -1));

        jLabel15.setBackground(new java.awt.Color(204, 204, 204));
        jLabel15.setText("Completed");
        add(jLabel15, new org.netbeans.lib.awtextra.AbsoluteConstraints(660, 530, -1, -1));

        jLabel16.setBackground(new java.awt.Color(204, 204, 204));
        jLabel16.setText("Vaccine Name");
        add(jLabel16, new org.netbeans.lib.awtextra.AbsoluteConstraints(660, 470, -1, -1));
        add(viewBreed, new org.netbeans.lib.awtextra.AbsoluteConstraints(490, 350, 150, -1));

        planOpted.setToolTipText("");
        add(planOpted, new org.netbeans.lib.awtextra.AbsoluteConstraints(490, 380, 150, -1));

        fieldVacName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fieldVacNameActionPerformed(evt);
            }
        });
        add(fieldVacName, new org.netbeans.lib.awtextra.AbsoluteConstraints(660, 490, 130, -1));

        jLabel18.setText("(Click on name to see details)");
        add(jLabel18, new org.netbeans.lib.awtextra.AbsoluteConstraints(480, 440, -1, -1));

        add(vacCompletedComboBox, new org.netbeans.lib.awtextra.AbsoluteConstraints(660, 550, 130, -1));

        jLabel19.setText("(Click on ID to see details)");
        add(jLabel19, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 290, -1, -1));
    }// </editor-fold>//GEN-END:initComponents

    private void viewAppIdFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_viewAppIdFocusLost

    }//GEN-LAST:event_viewAppIdFocusLost

    private void btnSrchAppActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSrchAppActionPerformed
        // TODO add your handling code here:
 
        String id = fieldSearchId.getText();
        String name = fieldSearchName.getText();
        
        searchResults = this.business.getApplicantDirectory().searchByNameOrId(name, id);
        
        //populate the table if results are found
        if(searchResults.size()!= 0){
            for(Applicant a: searchResults){
                populateApplicantTable(searchResults);
            }
        }        
    }//GEN-LAST:event_btnSrchAppActionPerformed

    private void btnDelAppActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDelAppActionPerformed
        // TODO add your handling code here:
        int selectedRow = applicantTable.getSelectedRow();
        Applicant selectedApp = (Applicant) applicantTable.getValueAt(selectedRow, 0);
        
        ApplicantDirectory applicantDirectory = this.business.getApplicantDirectory();
        
        String name = selectedApp.getFirstName();
        
        applicantDirectory.delApp(selectedApp);

        ArrayList<Applicant> searchAfterDelete = this.business.getApplicantDirectory().searchAppByName(name);

        applicantTableModel.setRowCount(0);
        
        //repopulate the table with the other applicants with the same name
        if(searchAfterDelete.size()!= 0){
            for(Applicant a: searchAfterDelete){
                populateApplicantTable(searchAfterDelete);
            }
        }

        //clear all the fields of the deleted app
        clearAppDetails();
    }//GEN-LAST:event_btnDelAppActionPerformed
    
    public void clearAppDetails(){
        viewAppId.setText("");
        viewOwnerFirstName.setText("");
        viewOwnerLastName.setText("");
        viewAppDate.setText("");
        viewPetName.setText("");
        viewAge.setText("");
        viewGender.setText("");
        viewType.setText("");
        viewBreed.setText("");
        viewGender.setText("");
        planOpted.setSelectedItem(null);
        vacTableModel.setRowCount(0);
        fieldVacName.setText("");
        vacCompletedComboBox.setSelectedItem(null);
        
    }
    private void btnUpdatePetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdatePetActionPerformed
        // TODO add your handling code here:
        String id = viewAppId.getText();
        Applicant selectedApp = this.business.getApplicantDirectory().searchByNameOrId(null, id).get(0);
        VaccinationHistory vacHistory = selectedApp.getPet().getVaccines();
        
        String name = viewPetName.getText();
        String age = viewAge.getText();
        String gender = viewGender.getText();
        String type = viewType.getText();
        String breed = viewBreed.getText();
        InsurancePlan plan = (InsurancePlan) planOpted.getSelectedItem();
       
        //check for null values before update
        VerifyNull checkNull = new VerifyNull();
        boolean nonull = checkNull.checkNullObject(name,age,gender,type,breed,plan);

        if(nonull){
            selectedApp.getPet().setPetName(name);
            selectedApp.getPet().setAge(Integer.valueOf(age));
            selectedApp.getPet().setGender(gender);
            selectedApp.getPet().setPetType(type);
            selectedApp.getPet().setBreed(breed);
            selectedApp.getPet().assignInsurance(plan);
            
            String vacName = fieldVacName.getText();
            String completed = (String) vacCompletedComboBox.getSelectedItem();
            
            if(!vacName.isEmpty() && completed != null){//need to update vaccine
                if(vacHistory.vaccineExists(vacName)){
                    vacHistory.findVaccine(vacName).setCourseCompletes(toBoolean(completed));
                }else{
                    vacHistory.addVaccine(vacName, toBoolean(completed));
                }
                
                JOptionPane.showMessageDialog(null, "pet updated");
        
                //repopulate the vaccine table after pet details are updated
                populateVacTable(selectedApp);
        
                //clear the vaccine input fields
                fieldVacName.setText("");
                vacCompletedComboBox.setSelectedItem(null);
                
            }else if(vacName.isEmpty() && completed == null){
                //no need to update vaccine, just save pet detail
                JOptionPane.showMessageDialog(null, "pet updated");
            }else{
                JOptionPane.showMessageDialog(null, "please fill all the fields for vaccination");
            }
            
            
        

        }
   
    }//GEN-LAST:event_btnUpdatePetActionPerformed
  
    public boolean toBoolean(String completed){
        if (completed.equalsIgnoreCase("Yes")){
            return true;
        }else{
            return false;
        }
    }
    private void fieldVacNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fieldVacNameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_fieldVacNameActionPerformed

    private void vacHistoryTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_vacHistoryTableMouseClicked
        // TODO add your handling code here:
        //get the selected applicant
        int selectedRow = applicantTable.getSelectedRow();
        Applicant selectedApp = (Applicant) applicantTable.getValueAt(selectedRow, 0);
        
        //get the selected vaccine
        int selectedVacRow = vacHistoryTable.getSelectedRow();
        String vacName = (String) vacHistoryTable.getValueAt(selectedVacRow, 0);
        Vaccination vac = selectedApp.getPet().getVaccines().findVaccine(vacName);
        
        //show vaccine detail
        fieldVacName.setText(vac.getVaccineName());
        vacCompletedComboBox.setSelectedItem(vac.getCourseCompletedString());
    }//GEN-LAST:event_vacHistoryTableMouseClicked

    private void applicantTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_applicantTableMouseClicked
        // TODO add your handling code here:
        int selectedRow = applicantTable.getSelectedRow(); 
        Applicant selectedApp = (Applicant) applicantTable.getValueAt(selectedRow, 0);
        
        viewAppId.setText(String.valueOf(selectedApp.getApplicantId()));
        viewOwnerFirstName.setText(selectedApp.getFirstName());
        viewOwnerLastName.setText(selectedApp.getLastName());
        
        SimpleDateFormat DateFormat = new SimpleDateFormat("yyyy-MM-dd");
        viewAppDate.setText(DateFormat.format(selectedApp.getApplicationDate()));  
        
        viewPetName.setText(selectedApp.getPet().getPetName());
        viewAge.setText(String.valueOf(selectedApp.getPet().getAge()));
        viewGender.setText(selectedApp.getPet().getGender());
        viewType.setText(selectedApp.getPet().getPetType());
        viewBreed.setText(selectedApp.getPet().getBreed());
        
        
        planOpted.setSelectedItem(selectedApp.getPet().getIsurancePlanOpted());
        
        //show the vaccine history table
        populateVacTable(selectedApp);
        
    }//GEN-LAST:event_applicantTableMouseClicked
    
    public void populateInsuranceComboBox(){
        ArrayList<InsurancePlan> insuancePlans = this.business.getInsurancePlanCatalog().getInsurancePlans();
        
        for(InsurancePlan ip: insuancePlans){
            planOpted.addItem(ip);
        }
    }
    
    public void populateVacCompletedComboBox(){
        vacCompletedComboBox.addItem("No");
        vacCompletedComboBox.addItem("Yes");
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable applicantTable;
    private javax.swing.JButton btnDelApp;
    private javax.swing.JButton btnSrchApp;
    private javax.swing.JButton btnUpdatePet;
    private javax.swing.JTextField fieldSearchId;
    private javax.swing.JTextField fieldSearchName;
    private javax.swing.JTextField fieldVacName;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JComboBox planOpted;
    private javax.swing.JComboBox<String> vacCompletedComboBox;
    private javax.swing.JTable vacHistoryTable;
    private javax.swing.JTextField viewAge;
    private javax.swing.JTextField viewAppDate;
    private javax.swing.JTextField viewAppId;
    private javax.swing.JTextField viewBreed;
    private javax.swing.JTextField viewGender;
    private javax.swing.JTextField viewOwnerFirstName;
    private javax.swing.JTextField viewOwnerLastName;
    private javax.swing.JTextField viewPetName;
    private javax.swing.JTextField viewType;
    // End of variables declaration//GEN-END:variables
}
