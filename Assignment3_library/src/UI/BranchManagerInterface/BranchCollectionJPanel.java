/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package UI.BranchManagerInterface;

import AppSystem.AppSystem;
import Branch.Branch;
import Customer.Customer;
import Library.Library;
import Library.Material.Book;
import Library.Material.Magazine;
import Library.User.UserAccount;
import java.text.SimpleDateFormat;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author emi
 */
public class BranchCollectionJPanel extends javax.swing.JPanel {

    /**
     * Creates new form BranchCollectionJPanel
     */
    private AppSystem app;
    private UserAccount ua;
    private DefaultTableModel bookTableModel;
    private DefaultTableModel magTableModel;
    private Branch currentBranch;
    private Library currentLib;
    private Customer c;
    
    public BranchCollectionJPanel(AppSystem app,UserAccount ua) {
        initComponents();
        this.setVisible(true);
        
        this.app = app;
        this.ua = ua;
        this.bookTableModel = (DefaultTableModel) bookTable.getModel();
        this.magTableModel = (DefaultTableModel) magTable.getModel();
        this.currentBranch = app.getBranchDirectory().findBranchForEmployee(ua);
        this.currentLib = currentBranch.getLibrary();
        
        this.c = this.app.getCustomerDirectory().findById(ua.getAccountid());
        
        populateBook();
        populateMag();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    
    public void populateBook(){
        SimpleDateFormat DateFormat = new SimpleDateFormat("yyyy-MM-dd");
        
        bookTableModel.setRowCount(0);
        
            for (Book b : this.currentBranch.getLibrary().getBookDirectory().getBooks()) {
                Object[] row = new Object[10];
                
                row[0] = b.getSerialNo();
                row[1] = b.getName();
                row[2] = DateFormat.format(b.getRegisterDate());
                row[3] = b.getAuthor().getName();
                row[4] = b.getGenre().getGenre();
                row[5] = b.getPages();
                row[6] = b.getLanguage();
                row[7] = b.getBindingType();
                row[8] = b.getAvailString(b.getIsAvailable());
                row[9] = this.currentLib.getBuildingNo();

                bookTableModel.addRow(row);
            }  
        }  
    
    
    public void populateMag(){
        SimpleDateFormat DateFormat = new SimpleDateFormat("yyyy-MM-dd");
        
        magTableModel.setRowCount(0);
     
            for (Magazine m : this.currentBranch.getLibrary().getMagazineDirectory().getMagazines()) {
                Object[] row = new Object[7];
                
                row[0] = m.getSerialNo();
                row[1] = m.getName();
                row[2] = DateFormat.format(m.getRegisterDate());
                row[3] = m.getCompany();
                row[4] = m.getIssueType();
                row[5] = m.getAvailString(m.getIsAvailable());
                row[6] = this.currentLib.getBuildingNo();

                magTableModel.addRow(row);
            }  
        }  
    
    
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel6 = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        bookTable = new javax.swing.JTable();
        jScrollPane1 = new javax.swing.JScrollPane();
        magTable = new javax.swing.JTable();
        jLabel7 = new javax.swing.JLabel();

        setBackground(new java.awt.Color(204, 204, 255));

        jLabel6.setText("Book Collection:");

        bookTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null}
            },
            new String [] {
                "Serial No", "Name", "Register date", "Author", "Genre", "Pages", "Language", "Binding", "Is Available", "Library"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Integer.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        bookTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                bookTableMouseClicked(evt);
            }
        });
        jScrollPane3.setViewportView(bookTable);

        magTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null}
            },
            new String [] {
                "Serial No", "Name", "Register date", "Company", "Issue type", "Is Available", "Library"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.Object.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Integer.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        magTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                magTableMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(magTable);

        jLabel7.setText("Magazine Collection:");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(17, 17, 17)
                        .addComponent(jLabel6))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 879, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 877, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel7)))
                .addContainerGap(130, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(34, 34, 34)
                .addComponent(jLabel6)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(48, 48, 48)
                .addComponent(jLabel7)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(53, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void bookTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_bookTableMouseClicked

    }//GEN-LAST:event_bookTableMouseClicked

    private void magTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_magTableMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_magTableMouseClicked


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable bookTable;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTable magTable;
    // End of variables declaration//GEN-END:variables
}
