/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package UI.LibrarianInterface;

import AppSystem.AppSystem;
import Branch.Branch;
import Library.Library;
import RentalRequest.RentalRequest;
import User.UserAccount;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author emi
 */
public class ManageRentalRequestJPanel extends javax.swing.JPanel {

    /**
     * Creates new form ManageRentalRequestJPanel
     */
    private AppSystem app;
    private UserAccount ua;
    DefaultTableModel tableModel;
    Branch currentBranch;
    Library currentLib;
    
    public ManageRentalRequestJPanel(AppSystem app,UserAccount ua) {
        initComponents();
        this.setVisible(true);
        
        this.app = app;
        this.ua = ua;
        this.tableModel = (DefaultTableModel) requestTable.getModel();
        this.currentBranch = app.getBranchDirectory().findBranchForEmployee(ua);
        
        this.currentLib = currentBranch.getLibrary();
        
        populate();
    }
    
    public void populate(){
        if (this.currentLib.getMasterRentalRequestDirectory().getMasterRequestList().size()>0){
            tableModel.setRowCount(0);
            for (RentalRequest rr : this.currentLib.getMasterRentalRequestDirectory().getMasterRequestList()) {

                Object[] row = new Object[8];

                row[0] = rr;
                row[1] = rr.getCustomer().getPersonid();
                row[2] = (rr.getBook() == null) ? "N/A" : rr.getBook().getName(); 
                row[3] = (rr.getMag() == null) ? "N/A" :rr.getMag().getName();
                row[4] = rr.getDuration();
                row[5] = rr.getPrice();
                row[6] = rr.getStatus();
                row[7] = rr.getLib();

                tableModel.addRow(row);
            }
        }   
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        requestTable = new javax.swing.JTable();
        approveBtn = new javax.swing.JButton();
        denyBtn = new javax.swing.JButton();

        setBackground(new java.awt.Color(255, 204, 204));

        requestTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Request Id", "Customer Id", "Book", "Magazine", "Duration", "Price", "Status", "Library"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Object.class, java.lang.Integer.class, java.lang.Integer.class, java.lang.String.class, java.lang.Object.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jScrollPane1.setViewportView(requestTable);

        approveBtn.setText("Approve");
        approveBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                approveBtnActionPerformed(evt);
            }
        });

        denyBtn.setText("Reject");
        denyBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                denyBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(254, 254, 254)
                .addComponent(approveBtn)
                .addGap(32, 32, 32)
                .addComponent(denyBtn)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 764, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(29, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 291, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(denyBtn)
                    .addComponent(approveBtn))
                .addGap(30, 30, 30))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void approveBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_approveBtnActionPerformed
        // TODO add your handling code here:
        int selectedRow = requestTable.getSelectedRow();

        RentalRequest rr = (RentalRequest) requestTable.getValueAt(selectedRow, 0);
        rr.setStatus("Approved");

        //update table
        populate();
    }//GEN-LAST:event_approveBtnActionPerformed

    private void denyBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_denyBtnActionPerformed
        // TODO add your handling code here:
        int selectedRow = requestTable.getSelectedRow();

        RentalRequest rr = (RentalRequest) requestTable.getValueAt(selectedRow, 0);
        rr.setStatus("Denied");
        
        //set the material avail to true in the selected request 
        if(rr.getBook()!=null){
            rr.getBook().setIsAvailable(true);
        }
        if(rr.getMag()!=null){
            rr.getMag().setIsAvailable(true);
        }
        
        //update table
        populate();
    }//GEN-LAST:event_denyBtnActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton approveBtn;
    private javax.swing.JButton denyBtn;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable requestTable;
    // End of variables declaration//GEN-END:variables
}
